[{"D:\\React Project\\company_profile\\src\\index.js":"1","D:\\React Project\\company_profile\\src\\reportWebVitals.js":"2","D:\\React Project\\company_profile\\src\\App.js":"3","D:\\React Project\\company_profile\\src\\Components\\Navbar.jsx":"4","D:\\React Project\\company_profile\\src\\Screens\\Dashboard.jsx":"5","D:\\React Project\\company_profile\\src\\Components\\Login.jsx":"6","D:\\React Project\\company_profile\\src\\Components\\Register.jsx":"7","D:\\React Project\\company_profile\\src\\Screens\\CareerMenu.jsx":"8","D:\\React Project\\company_profile\\src\\Screens\\ProfileMenu.jsx":"9","D:\\React Project\\company_profile\\src\\Screens\\ContactMenu.jsx":"10","D:\\React Project\\company_profile\\src\\Screens\\AppsMenu.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":6867,"mtime":1609927107335,"results":"15","hashOfConfig":"13"},{"size":4161,"mtime":1610009210505,"results":"16","hashOfConfig":"13"},{"size":12043,"mtime":1610010612905,"results":"17","hashOfConfig":"13"},{"size":6188,"mtime":1609822272851,"results":"18","hashOfConfig":"13"},{"size":7462,"mtime":1609924610124,"results":"19","hashOfConfig":"13"},{"size":22627,"mtime":1610007543168,"results":"20","hashOfConfig":"13"},{"size":8369,"mtime":1609905808588,"results":"21","hashOfConfig":"13"},{"size":6641,"mtime":1609989846229,"results":"22","hashOfConfig":"13"},{"size":44047,"mtime":1610007888590,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1pr9iyl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"D:\\React Project\\company_profile\\src\\index.js",[],["49","50"],"D:\\React Project\\company_profile\\src\\reportWebVitals.js",[],"D:\\React Project\\company_profile\\src\\App.js",[],"D:\\React Project\\company_profile\\src\\Components\\Navbar.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\Dashboard.jsx",["51","52"],"D:\\React Project\\company_profile\\src\\Components\\Login.jsx",[],"D:\\React Project\\company_profile\\src\\Components\\Register.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\CareerMenu.jsx",["53"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst CareerMenu = () => {\r\n    const [tableJob, setTableJob] = useState('')\r\n    const [idJob, setIdJob] = useState('')\r\n    const [jobposition, setJobPosition] = useState('')\r\n    const [joblocation, setJobLocation] = useState('')\r\n    const [jobdescription, setJobDescription] = useState('')\r\n    const [joblink, setJobLink] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    const fetchJob = async () => {\r\n        try {\r\n            const fetchApiJob = await fetch(`${URL_API}/job`, {\r\n                method: 'GET',\r\n            })\r\n            const jobdata = await fetchApiJob.json()\r\n            dataTableJob(jobdata.result)\r\n        } catch (error) {\r\n            console.log('error')\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchJob().then(() => {\r\n            setLoading(true)\r\n        });\r\n    }, [])\r\n\r\n    // Setting the data table\r\n    const dataTableJob = job => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < job.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"job_position\"] = job[index].job_position\r\n            rowItem[\"job_location\"] = job[index].job_location\r\n            rowItem[\"job_description\"] = job[index].job_description\r\n            rowItem[\"job_link\"] = job[index].job_link\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} onClick={event => getIdJob(event)} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={job[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={e => deleteJob(e)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={job[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableJob(rowsData)\r\n    }\r\n\r\n    // Data job\r\n    const dataJob = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Position',\r\n                    field: 'job_position',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Location',\r\n                    field: 'job_location',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Description',\r\n                    field: 'job_description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Link',\r\n                    field: 'job_link',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add job\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/job/store`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    jobposition,\r\n                    jobdescription,\r\n                    joblocation,\r\n                    joblink\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Job',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setJobPosition('')\r\n                    setJobLocation('')\r\n                    setJobDescription('')\r\n                    setJobLink('')\r\n                    fetchJob().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id job\r\n    const getIdJob = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/job/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const result = await data.json()\r\n            console.log(result)\r\n            setIdJob(result.data.id)\r\n            setJobPosition(result.data.job_position)\r\n            setJobLocation(result.data.job_location)\r\n            setJobDescription(result.data.job_description)\r\n            setJobLink(result.data.job_link)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const updateJob = await fetch(`${URL_API}/job/update/${idJob}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    jobposition,\r\n                    jobdescription,\r\n                    joblocation,\r\n                    joblink\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const update = await updateJob.json()\r\n            if (update.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Job',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setJobPosition('')\r\n                    setJobLocation('')\r\n                    setJobDescription('')\r\n                    setJobLink('')\r\n                    fetchJob().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete job\r\n    const deleteJob = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data Siswa has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/job/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchJob().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Career Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Career Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Siswa */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Job Hiring</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                            Add Modal\r\n                                            </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    noBottomColumns={true}\r\n                                    data={dataJob(tableJob)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Job Position</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"input job position\"\r\n                                            onChange={e => setJobPosition(e.target.value)}\r\n                                            value={jobposition}\r\n                                            name=\"jobposition\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput2\">Job Location</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput2\"\r\n                                            placeholder=\"input job location\"\r\n                                            onChange={e => setJobLocation(e.target.value)}\r\n                                            value={joblocation}\r\n                                            name=\"joblocation\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput3\">Job Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput3\"\r\n                                            placeholder=\"input job description\"\r\n                                            onChange={e => setJobDescription(e.target.value)}\r\n                                            value={jobdescription}\r\n                                            name=\"jobdescription\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput4\">Job Link</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput4\"\r\n                                            placeholder=\"input job link\"\r\n                                            onChange={e => setJobLink(e.target.value)}\r\n                                            value={joblink}\r\n                                            name=\"joblink\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Job Position</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"input job position\"\r\n                                            onChange={e => setJobPosition(e.target.value)}\r\n                                            value={jobposition}\r\n                                            name=\"jobposition\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput2\">Job Location</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput2\"\r\n                                            placeholder=\"input job location\"\r\n                                            onChange={e => setJobLocation(e.target.value)}\r\n                                            value={joblocation}\r\n                                            name=\"joblocation\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput3\">Job Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput3\"\r\n                                            placeholder=\"input job description\"\r\n                                            onChange={e => setJobDescription(e.target.value)}\r\n                                            value={jobdescription}\r\n                                            name=\"jobdescription\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput4\">Job Link</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput4\"\r\n                                            placeholder=\"input job link\"\r\n                                            onChange={e => setJobLink(e.target.value)}\r\n                                            value={joblink}\r\n                                            name=\"joblink\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default CareerMenu","D:\\React Project\\company_profile\\src\\Screens\\ProfileMenu.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\ContactMenu.jsx",["54"],"D:\\React Project\\company_profile\\src\\Screens\\AppsMenu.jsx",["55"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst AppsMenu = () => {\r\n    const [tableApps, setTableApps] = useState('')\r\n    const [idApps, setIdApps] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n\r\n    // this for add\r\n    const [icon, setIcon] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [deskripsi, setDeskripsi] = useState('')\r\n    const [iconfiture1, setIconFiture1] = useState('')\r\n    const [fiture1, setFiture1] = useState('')\r\n    const [iconfiture2, setIconFiture2] = useState('')\r\n    const [fiture2, setFiture2] = useState('')\r\n    const [iconfiture3, setIconFiture3] = useState('')\r\n    const [fiture3, setFiture3] = useState('')\r\n    const [iconfiture4, setIconFiture4] = useState('')\r\n    const [fiture4, setFiture4] = useState('')\r\n    const [iconfiture5, setIconFiture5] = useState('')\r\n    const [fiture5, setFiture5] = useState('')\r\n    const [iconfiture6, setIconFiture6] = useState('')\r\n    const [fiture6, setFiture6] = useState('')\r\n\r\n    // this for edit\r\n    const [iconEdit, setIconEdit] = useState('')\r\n    const [imageEdit, setImageEdit] = useState('')\r\n    const [iconfitureEdit1, setIconFitureEdit1] = useState('')\r\n    const [iconfitureEdit2, setIconFitureEdit2] = useState('')\r\n    const [iconfitureEdit3, setIconFitureEdit3] = useState('')\r\n    const [iconfitureEdit4, setIconFitureEdit4] = useState('')\r\n    const [iconfitureEdit5, setIconFitureEdit5] = useState('')\r\n    const [iconfitureEdit6, setIconFitureEdit6] = useState('')\r\n\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableApps = apps => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < apps.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"icon\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon} alt=\"tidak ada gambar\" />\r\n            rowItem[\"imageproduct\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].image} alt=\"tidak ada gambar\" />\r\n            rowItem[\"deskripsi\"] = apps[index].description\r\n            rowItem[\"fiture1\"] = apps[index].fiture1\r\n            rowItem[\"iconfiture1\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture1} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture2\"] = apps[index].fiture2\r\n            rowItem[\"iconfiture2\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture2} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture3\"] = apps[index].fiture3\r\n            rowItem[\"iconfiture3\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture3} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture4\"] = apps[index].fiture4\r\n            rowItem[\"iconfiture4\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture4} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture5\"] = apps[index].fiture5\r\n            rowItem[\"iconfiture5\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture5} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture6\"] = apps[index].fiture6\r\n            rowItem[\"iconfiture6\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture6} alt=\"tidak ada gambar\" />\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={event => getIdApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={event => deleteApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableApps(rowsData)\r\n    }\r\n\r\n    const fetchApps = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product`, {\r\n                method: 'GET'\r\n            })\r\n            const datapps = await data.json()\r\n            dataTableApps(datapps.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApps().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    // Data apps\r\n    const dataApps = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Product',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Product',\r\n                    field: 'imageproduct',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description Product',\r\n                    field: 'deskripsi',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 1',\r\n                    field: 'fiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 1',\r\n                    field: 'iconfiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 2',\r\n                    field: 'fiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 2',\r\n                    field: 'iconfiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 3',\r\n                    field: 'fiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 3',\r\n                    field: 'iconfiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 4',\r\n                    field: 'fiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 4',\r\n                    field: 'iconfiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 5',\r\n                    field: 'fiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 5',\r\n                    field: 'iconfiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 6',\r\n                    field: 'fiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 6',\r\n                    field: 'iconfiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add apps\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/store`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIcon('')\r\n                    setImage('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setIconFiture1('')\r\n                    setFiture2('')\r\n                    setIconFiture2('')\r\n                    setFiture3('')\r\n                    setIconFiture3('')\r\n                    setFiture4('')\r\n                    setIconFiture4('')\r\n                    setFiture5('')\r\n                    setIconFiture5('')\r\n                    setFiture6('')\r\n                    setIconFiture6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id apps\r\n    const getIdApps = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const result = await data.json()\r\n            console.log(result.data)\r\n            setIdApps(result.data.id)\r\n            setDeskripsi(result.data.description)\r\n            setFiture1(result.data.fiture1)\r\n            setFiture2(result.data.fiture2)\r\n            setFiture3(result.data.fiture3)\r\n            setFiture4(result.data.fiture4)\r\n            setFiture5(result.data.fiture5)\r\n            setFiture6(result.data.fiture6)\r\n            console.log(icon)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // handle submit edit apps\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/update/${idApps}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIconEdit('')\r\n                    setImageEdit('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setIconFitureEdit1('')\r\n                    setFiture2('')\r\n                    setIconFitureEdit2('')\r\n                    setFiture3('')\r\n                    setIconFitureEdit3('')\r\n                    setFiture4('')\r\n                    setIconFitureEdit4('')\r\n                    setFiture5('')\r\n                    setIconFitureEdit5('')\r\n                    setFiture6('')\r\n                    setIconFitureEdit6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete apps\r\n    const deleteApps = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data Apps has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/product/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Apps Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Apps Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Siswa */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Aplication Product</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    noBottomColumns={true}\r\n                                    striped\r\n                                    data={dataApps(tableApps)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                            <li>Maximum letters is 255</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={icon}\r\n                                            onChange={e => setIcon(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={image}\r\n                                            onChange={e => setImage(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 1</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture1\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture1}\r\n                                            onChange={e => setIconFiture1(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 2</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture2\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture2}\r\n                                            onChange={e => setIconFiture2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 3</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture3\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture3}\r\n                                            onChange={e => setIconFiture3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 4</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture4\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture4}\r\n                                            onChange={e => setIconFiture4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 5</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture5\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture5}\r\n                                            onChange={e => setIconFiture5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 6</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture6\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture6}\r\n                                            onChange={e => setIconFiture6(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                            <li>Maximum letters is 255</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconEdit}\r\n                                            onChange={e => setIconEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={imageEdit}\r\n                                            onChange={e => setImageEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 1</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture1\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit1}\r\n                                            onChange={e => setIconFitureEdit1(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 2</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture2\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit2}\r\n                                            onChange={e => setIconFitureEdit2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 3</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture3\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit3}\r\n                                            onChange={e => setIconFitureEdit3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 4</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture4\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit4}\r\n                                            onChange={e => setIconFitureEdit4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 5</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture5\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit5}\r\n                                            onChange={e => setIconFitureEdit5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 6</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture6\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit6}\r\n                                            onChange={e => setIconFitureEdit6(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default AppsMenu",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":29,"column":8,"nodeType":"62","endLine":29,"endColumn":21,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":82,"column":8,"nodeType":"62","endLine":82,"endColumn":10,"suggestions":"65"},{"ruleId":"60","severity":1,"message":"66","line":38,"column":8,"nodeType":"62","endLine":38,"endColumn":10,"suggestions":"67"},{"ruleId":"60","severity":1,"message":"61","line":19,"column":8,"nodeType":"62","endLine":19,"endColumn":10,"suggestions":"68"},{"ruleId":"60","severity":1,"message":"69","line":94,"column":8,"nodeType":"62","endLine":94,"endColumn":10,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchContact'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has missing dependencies: 'getAmountContact', 'getAmountJob', and 'getAmoutApps'. Either include them or remove the dependency array.",["74"],"React Hook useEffect has a missing dependency: 'fetchJob'. Either include it or remove the dependency array.",["75"],["76"],"React Hook useEffect has a missing dependency: 'fetchApps'. Either include it or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [currentPage, fetchContact]",{"range":"88","text":"89"},"Update the dependencies array to be: [getAmountContact, getAmountJob, getAmoutApps]",{"range":"90","text":"91"},"Update the dependencies array to be: [fetchJob]",{"range":"92","text":"93"},"Update the dependencies array to be: [fetchContact]",{"range":"94","text":"95"},"Update the dependencies array to be: [fetchApps]",{"range":"96","text":"97"},[983,996],"[currentPage, fetchContact]",[2522,2524],"[getAmountContact, getAmountJob, getAmoutApps]",[1207,1209],"[fetchJob]",[539,541],"[fetchContact]",[4929,4931],"[fetchApps]"]