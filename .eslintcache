[{"/media/jibran/New Volume/React Project/company_profile/src/index.js":"1","/media/jibran/New Volume/React Project/company_profile/src/App.js":"2","/media/jibran/New Volume/React Project/company_profile/src/reportWebVitals.js":"3","/media/jibran/New Volume/React Project/company_profile/src/Screens/ContactMenu.jsx":"4","/media/jibran/New Volume/React Project/company_profile/src/Screens/RadioMenu.jsx":"5","/media/jibran/New Volume/React Project/company_profile/src/Screens/ProfileMenu.jsx":"6","/media/jibran/New Volume/React Project/company_profile/src/Screens/CareerMenu.jsx":"7","/media/jibran/New Volume/React Project/company_profile/src/Screens/AppsMenu.jsx":"8","/media/jibran/New Volume/React Project/company_profile/src/Screens/Dashboard.jsx":"9","/media/jibran/New Volume/React Project/company_profile/src/Screens/UserMenu.jsx":"10","/media/jibran/New Volume/React Project/company_profile/src/Components/Login.jsx":"11","/media/jibran/New Volume/React Project/company_profile/src/Components/Navbar.jsx":"12","/media/jibran/New Volume/React Project/company_profile/src/Screens/DigitalAds.jsx":"13","/media/jibran/New Volume/React Project/company_profile/src/Components/Register.jsx":"14","/media/jibran/New Volume/React Project/company_profile/src/Screens/RadioCoverage.jsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":7781,"mtime":1610947087638,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":6643,"mtime":1610072037955,"results":"20","hashOfConfig":"17"},{"size":24029,"mtime":1610091324894,"results":"21","hashOfConfig":"17"},{"size":8371,"mtime":1610070802648,"results":"22","hashOfConfig":"17"},{"size":22592,"mtime":1610348559136,"results":"23","hashOfConfig":"17"},{"size":45450,"mtime":1610949616745,"results":"24","hashOfConfig":"17"},{"size":16407,"mtime":1610338653483,"results":"25","hashOfConfig":"17"},{"size":21730,"mtime":1610348589747,"results":"26","hashOfConfig":"17"},{"size":6001,"mtime":1610349307714,"results":"27","hashOfConfig":"17"},{"size":4300,"mtime":1610070764381,"results":"28","hashOfConfig":"17"},{"size":21703,"mtime":1610954909458,"results":"29","hashOfConfig":"17"},{"size":7459,"mtime":1610340181699,"results":"30","hashOfConfig":"17"},{"size":30888,"mtime":1610095428426,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fxv3nu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/media/jibran/New Volume/React Project/company_profile/src/index.js",[],["71","72"],"/media/jibran/New Volume/React Project/company_profile/src/App.js",[],"/media/jibran/New Volume/React Project/company_profile/src/reportWebVitals.js",[],"/media/jibran/New Volume/React Project/company_profile/src/Screens/ContactMenu.jsx",["73"],"import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst ContactMenu = () => {\r\n    const [tableContact, setTableContact] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    useEffect(() => {\r\n        fetchContact().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    const fetchContact = async () => {\r\n        try {\r\n            const fetchApiContact = await fetch(`${URL_API}/contact/all`, {\r\n                method: 'GET'\r\n            })\r\n            const contactdata = await fetchApiContact.json()\r\n            dataTableContact(contactdata.result)\r\n            console.log(contactdata.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    // Setting the data table\r\n    const dataTableContact = contact => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < contact.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"name\"] = contact[index].name\r\n            rowItem[\"email\"] = contact[index].email\r\n            rowItem[\"message_user\"] = contact[index].message\r\n            rowItem[\"created_at\"] = contact[index].created_at.slice(0, 19).replace('T', ' ')\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={deleteContact} style={{ marginRight: \"10px\", width: \"85%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={contact[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"5px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n            console.log(rowItem)\r\n        }\r\n        setTableContact(rowsData)\r\n    }\r\n\r\n    // Data contact\r\n    const dataContact = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Message',\r\n                    field: 'message_user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Created At',\r\n                    field: 'created_at',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // Delete contact\r\n    const deleteContact = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data Siswa has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const contactDelete = await fetch(`${URL_API}/contact/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await contactDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchContact().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Contact Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Contact Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Contact */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Contact</h6>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    data={dataContact(tableContact)}\r\n                                    responsive={true}\r\n                                    noBottomColumns={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default ContactMenu","/media/jibran/New Volume/React Project/company_profile/src/Screens/RadioMenu.jsx",["74"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport RadioCoverage from './RadioCoverage';\r\n\r\n\r\nconst RadioMenu = () => {\r\n    const [tableRadio, setTableRadio] = useState('')\r\n    const [idRadio, setIdRadio] = useState('')\r\n    const [fm_channel, setFmChannel] = useState('')\r\n    const [kota, setKota] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [idProvinsi, setIdProvinsi] = useState(0)\r\n    const [provinsi, setProvinsi] = useState('')\r\n    const [kotaPilih, setKotaPilih] = useState('')\r\n    const Swal = withReactContent(MySwal)\r\n    const keyAPI = `5ZZHvtG7IvXmVDSCLTB73gd1XwqFjaWUiiTZrz1exj8pLIbFFm`\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableRadio = radio => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < radio.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"fm\"] = radio[index].fm_channel\r\n            rowItem[\"kota\"] = radio[index].kota\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} onClick={event => getIdRadio(event)} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={radio[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={e => deleteRadio(e)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={radio[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableRadio(rowsData)\r\n    }\r\n\r\n    const fetchRadio = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/radio`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            dataTableRadio(resp.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRadio()\r\n            .then(() => {\r\n                setLoading(true)\r\n            }).then(() => {\r\n                getProvinsi()\r\n            })\r\n\r\n        if (idProvinsi) {\r\n            getKota()\r\n        }\r\n    }, [idProvinsi])\r\n\r\n    // Data radio\r\n    const dataRadio = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'FM Channel',\r\n                    field: 'fm',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'City',\r\n                    field: 'kota',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add radio\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/radio/store`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    fm_channel,\r\n                    kota\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Radio',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setFmChannel('')\r\n                    setKota('')\r\n                    setIdProvinsi('')\r\n                    fetchRadio().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id radio\r\n    const getIdRadio = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/radio/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            setIdRadio(resp.data.id)\r\n            setFmChannel(resp.data.fm_channel)\r\n            setKota(resp.data.kota)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Handle edit\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const updateJob = await fetch(`${URL_API}/radio/update/${idRadio}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    fm_channel,\r\n                    kota\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const update = await updateJob.json()\r\n            if (update.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Radio',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setFmChannel('')\r\n                    setKota('')\r\n                    setIdProvinsi('')\r\n                    fetchRadio().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete radio\r\n    const deleteRadio = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data radio has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/radio/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchRadio().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProvinsi = async () => {\r\n        try {\r\n            const data = await fetch(`https://x.rajaapi.com/MeP7c5ne${keyAPI}/m/wilayah/provinsi`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            if (resp.success) {\r\n                setProvinsi(resp.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const getKota = async () => {\r\n        try {\r\n            const data = await fetch(`https://x.rajaapi.com/MeP7c5ne${keyAPI}/m/wilayah/kabupaten?idpropinsi=${idProvinsi}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            if (resp.success) {\r\n                setKotaPilih(resp.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Radio Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Radio Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Radio */}\r\n                    <div className=\"col-xl-6 col-lg-6\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Radio</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    noBottomColumns={true}\r\n                                    responsive={true}\r\n                                    data={dataRadio(tableRadio)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Area Table Radio Coverage */}\r\n                    <RadioCoverage />\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">FM Channel</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"95.5 FM\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={fm_channel}\r\n                                            onChange={e => setFmChannel(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={idProvinsi}\r\n                                            onChange={e => setIdProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsi.length > 0 &&\r\n                                                provinsi.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsi.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect3\">Pilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"kota\"\r\n                                            id=\"exampleFormControlSelect3\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={kota}\r\n                                            onChange={e => setKota(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {kotaPilih.length > 0 &&\r\n                                                kotaPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {kotaPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">FM Channel</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"95.5 FM\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={fm_channel}\r\n                                            onChange={e => setFmChannel(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={idProvinsi}\r\n                                            onChange={e => setIdProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsi.length > 0 &&\r\n                                                provinsi.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsi.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect3\">Pilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"kota\"\r\n                                            id=\"exampleFormControlSelect3\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={kota}\r\n                                            onChange={e => setKota(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {kotaPilih.length > 0 &&\r\n                                                kotaPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {kotaPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default RadioMenu","/media/jibran/New Volume/React Project/company_profile/src/Screens/ProfileMenu.jsx",[],"/media/jibran/New Volume/React Project/company_profile/src/Screens/CareerMenu.jsx",["75"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst CareerMenu = () => {\r\n    const [tableJob, setTableJob] = useState('')\r\n    const [idJob, setIdJob] = useState('')\r\n    const [jobposition, setJobPosition] = useState('')\r\n    const [joblocation, setJobLocation] = useState('')\r\n    const [jobdescription, setJobDescription] = useState('')\r\n    const [joblink, setJobLink] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    const fetchJob = async () => {\r\n        try {\r\n            const fetchApiJob = await fetch(`${URL_API}/job`, {\r\n                method: 'GET',\r\n            })\r\n            const jobdata = await fetchApiJob.json()\r\n            dataTableJob(jobdata.result)\r\n        } catch (error) {\r\n            console.log('error')\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchJob().then(() => {\r\n            setLoading(true)\r\n        });\r\n    }, [])\r\n\r\n    // Setting the data table\r\n    const dataTableJob = job => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < job.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"job_position\"] = job[index].job_position\r\n            rowItem[\"job_location\"] = job[index].job_location\r\n            rowItem[\"job_description\"] = job[index].job_description\r\n            rowItem[\"job_link\"] = job[index].job_link\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} onClick={event => getIdJob(event)} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={job[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={e => deleteJob(e)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={job[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableJob(rowsData)\r\n    }\r\n\r\n    // Data job\r\n    const dataJob = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Position',\r\n                    field: 'job_position',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Location',\r\n                    field: 'job_location',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Description',\r\n                    field: 'job_description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Job Link',\r\n                    field: 'job_link',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add job\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/job/store`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    jobposition,\r\n                    jobdescription,\r\n                    joblocation,\r\n                    joblink\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Job',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setJobPosition('')\r\n                    setJobLocation('')\r\n                    setJobDescription('')\r\n                    setJobLink('')\r\n                    fetchJob().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id job\r\n    const getIdJob = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/job/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const result = await data.json()\r\n            setIdJob(result.data.id)\r\n            setJobPosition(result.data.job_position)\r\n            setJobLocation(result.data.job_location)\r\n            setJobDescription(result.data.job_description)\r\n            setJobLink(result.data.job_link)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const updateJob = await fetch(`${URL_API}/job/update/${idJob}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    jobposition,\r\n                    jobdescription,\r\n                    joblocation,\r\n                    joblink\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const update = await updateJob.json()\r\n            if (update.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Job',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setJobPosition('')\r\n                    setJobLocation('')\r\n                    setJobDescription('')\r\n                    setJobLink('')\r\n                    fetchJob().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete job\r\n    const deleteJob = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data job has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const careerDelete = await fetch(`${URL_API}/job/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await careerDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchJob().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Career Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Career Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Job */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Job Hiring</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                            Add Modal\r\n                                            </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    noBottomColumns={true}\r\n                                    data={dataJob(tableJob)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Job Position</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"input job position\"\r\n                                            onChange={e => setJobPosition(e.target.value)}\r\n                                            value={jobposition}\r\n                                            name=\"jobposition\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput2\">Job Location</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput2\"\r\n                                            placeholder=\"input job location\"\r\n                                            onChange={e => setJobLocation(e.target.value)}\r\n                                            value={joblocation}\r\n                                            name=\"joblocation\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput3\">Job Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput3\"\r\n                                            placeholder=\"input job description\"\r\n                                            onChange={e => setJobDescription(e.target.value)}\r\n                                            value={jobdescription}\r\n                                            name=\"jobdescription\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput4\">Job Link</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput4\"\r\n                                            placeholder=\"input job link\"\r\n                                            onChange={e => setJobLink(e.target.value)}\r\n                                            value={joblink}\r\n                                            name=\"joblink\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Job Position</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"input job position\"\r\n                                            onChange={e => setJobPosition(e.target.value)}\r\n                                            value={jobposition}\r\n                                            name=\"jobposition\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput2\">Job Location</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput2\"\r\n                                            placeholder=\"input job location\"\r\n                                            onChange={e => setJobLocation(e.target.value)}\r\n                                            value={joblocation}\r\n                                            name=\"joblocation\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput3\">Job Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput3\"\r\n                                            placeholder=\"input job description\"\r\n                                            onChange={e => setJobDescription(e.target.value)}\r\n                                            value={jobdescription}\r\n                                            name=\"jobdescription\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput4\">Job Link</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlInput4\"\r\n                                            placeholder=\"input job link\"\r\n                                            onChange={e => setJobLink(e.target.value)}\r\n                                            value={joblink}\r\n                                            name=\"joblink\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default CareerMenu","/media/jibran/New Volume/React Project/company_profile/src/Screens/AppsMenu.jsx",["76"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst AppsMenu = () => {\r\n    const [tableApps, setTableApps] = useState('')\r\n    const [idApps, setIdApps] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    // this for add\r\n    const [icon, setIcon] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [deskripsi, setDeskripsi] = useState('')\r\n    const [titlefiture1, setTitleFiture1] = useState('')\r\n    const [fiture1, setFiture1] = useState('')\r\n    const [titlefiture2, setTitleFiture2] = useState('')\r\n    const [fiture2, setFiture2] = useState('')\r\n    const [titlefiture3, setTitleFiture3] = useState('')\r\n    const [fiture3, setFiture3] = useState('')\r\n    const [titlefiture4, setTitleFiture4] = useState('')\r\n    const [fiture4, setFiture4] = useState('')\r\n    const [titlefiture5, setTitleFiture5] = useState('')\r\n    const [fiture5, setFiture5] = useState('')\r\n    const [titlefiture6, setTitleFiture6] = useState('')\r\n    const [fiture6, setFiture6] = useState('')\r\n\r\n    // this for edit\r\n    const [iconEdit, setIconEdit] = useState('')\r\n    const [imageEdit, setImageEdit] = useState('')\r\n\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableApps = apps => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < apps.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"icon\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon} alt=\"tidak ada gambar\" />\r\n            rowItem[\"imageproduct\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].image} alt=\"tidak ada gambar\" />\r\n            rowItem[\"deskripsi\"] = apps[index].description\r\n            rowItem[\"fiture1\"] = apps[index].fiture1\r\n            rowItem[\"titlefiture1\"] = apps[index].titlefiture1\r\n            rowItem[\"fiture2\"] = apps[index].fiture2\r\n            rowItem[\"titlefiture2\"] = apps[index].titlefiture2\r\n            rowItem[\"fiture3\"] = apps[index].fiture3\r\n            rowItem[\"titlefiture3\"] = apps[index].titlefiture3\r\n            rowItem[\"fiture4\"] = apps[index].fiture4\r\n            rowItem[\"titlefiture4\"] = apps[index].titlefiture4\r\n            rowItem[\"fiture5\"] = apps[index].fiture5\r\n            rowItem[\"titlefiture5\"] = apps[index].titlefiture5\r\n            rowItem[\"fiture6\"] = apps[index].fiture6\r\n            rowItem[\"titlefiture6\"] = apps[index].titlefiture6\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={event => getIdApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={event => deleteApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableApps(rowsData)\r\n    }\r\n\r\n    const fetchApps = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product`, {\r\n                method: 'GET'\r\n            })\r\n            const datapps = await data.json()\r\n            dataTableApps(datapps.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApps().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    // Data apps\r\n    const dataApps = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Product',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Product',\r\n                    field: 'imageproduct',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description Product',\r\n                    field: 'deskripsi',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 1',\r\n                    field: 'fiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Title Fiture 1',\r\n                    field: 'titlefiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 2',\r\n                    field: 'fiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Title Fiture 2',\r\n                    field: 'titlefiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 3',\r\n                    field: 'fiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Title Fiture 3',\r\n                    field: 'titlefiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 4',\r\n                    field: 'fiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Title Fiture 4',\r\n                    field: 'titlefiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 5',\r\n                    field: 'fiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Title Fiture 5',\r\n                    field: 'titlefiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 6',\r\n                    field: 'fiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Title Fiture 6',\r\n                    field: 'titlefiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add apps\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/store`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIcon('')\r\n                    setImage('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setTitleFiture1('')\r\n                    setFiture2('')\r\n                    setTitleFiture2('')\r\n                    setFiture3('')\r\n                    setTitleFiture3('')\r\n                    setFiture4('')\r\n                    setTitleFiture4('')\r\n                    setFiture5('')\r\n                    setTitleFiture5('')\r\n                    setFiture6('')\r\n                    setTitleFiture6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id apps\r\n    const getIdApps = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const result = await data.json()\r\n            console.log(result.data)\r\n            setIdApps(result.data.id)\r\n            setDeskripsi(result.data.description)\r\n            setFiture1(result.data.fiture1)\r\n            setFiture2(result.data.fiture2)\r\n            setFiture3(result.data.fiture3)\r\n            setFiture4(result.data.fiture4)\r\n            setFiture5(result.data.fiture5)\r\n            setFiture6(result.data.fiture6)\r\n            setTitleFiture1(result.data.titlefiture1)\r\n            setTitleFiture2(result.data.titlefiture2)\r\n            setTitleFiture3(result.data.titlefiture3)\r\n            setTitleFiture4(result.data.titlefiture4)\r\n            setTitleFiture5(result.data.titlefiture5)\r\n            setTitleFiture6(result.data.titlefiture6)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // handle submit edit apps\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/update/${idApps}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIconEdit('')\r\n                    setImageEdit('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setTitleFiture1('')\r\n                    setFiture2('')\r\n                    setTitleFiture2('')\r\n                    setFiture3('')\r\n                    setTitleFiture3('')\r\n                    setFiture4('')\r\n                    setTitleFiture4('')\r\n                    setFiture5('')\r\n                    setTitleFiture5('')\r\n                    setFiture6('')\r\n                    setTitleFiture6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete apps\r\n    const deleteApps = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data Apps has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/product/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Apps Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Apps Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Apps */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Aplication Product</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    noBottomColumns={true}\r\n                                    striped\r\n                                    data={dataApps(tableApps)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                            <li>Maximum letters is 255</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={icon}\r\n                                            onChange={e => setIcon(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={image}\r\n                                            onChange={e => setImage(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 1</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 1\"\r\n                                            onChange={e => setTitleFiture1(e.target.value)}\r\n                                            value={titlefiture1}\r\n                                            name=\"titlefiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 2</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 2\"\r\n                                            onChange={e => setTitleFiture2(e.target.value)}\r\n                                            value={titlefiture2}\r\n                                            name=\"titlefiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 3</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 3\"\r\n                                            onChange={e => setTitleFiture3(e.target.value)}\r\n                                            value={titlefiture3}\r\n                                            name=\"titlefiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 4</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 4\"\r\n                                            onChange={e => setTitleFiture4(e.target.value)}\r\n                                            value={titlefiture4}\r\n                                            name=\"titlefiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 5</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 5\"\r\n                                            onChange={e => setTitleFiture5(e.target.value)}\r\n                                            value={titlefiture5}\r\n                                            name=\"titlefiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 6</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 6\"\r\n                                            onChange={e => setTitleFiture6(e.target.value)}\r\n                                            value={titlefiture6}\r\n                                            name=\"titlefiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                            <li>Maximum letters is 255</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconEdit}\r\n                                            onChange={e => setIconEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={imageEdit}\r\n                                            onChange={e => setImageEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 1</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 1\"\r\n                                            onChange={e => setTitleFiture1(e.target.value)}\r\n                                            value={titlefiture1}\r\n                                            name=\"titlefiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 2</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 2\"\r\n                                            onChange={e => setTitleFiture2(e.target.value)}\r\n                                            value={titlefiture2}\r\n                                            name=\"titlefiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 3</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 3\"\r\n                                            onChange={e => setTitleFiture3(e.target.value)}\r\n                                            value={titlefiture3}\r\n                                            name=\"titlefiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 4</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 4\"\r\n                                            onChange={e => setTitleFiture4(e.target.value)}\r\n                                            value={titlefiture4}\r\n                                            name=\"titlefiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 5</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 5\"\r\n                                            onChange={e => setTitleFiture5(e.target.value)}\r\n                                            value={titlefiture5}\r\n                                            name=\"titlefiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title Feature Product 6</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 6\"\r\n                                            onChange={e => setTitleFiture6(e.target.value)}\r\n                                            value={titlefiture6}\r\n                                            name=\"titlefiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default AppsMenu","/media/jibran/New Volume/React Project/company_profile/src/Screens/Dashboard.jsx",["77","78"],"/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React, {\r\n    useState,\r\n    useEffect,\r\n    useRef\r\n} from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CountUp from 'react-countup';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { VectorMap } from 'react-jvectormap';\r\n\r\nconst Dashboard = () => {\r\n    const [contact, setContact] = useState('')\r\n    const [pageCount, setPageCount] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [jumlahContact, setJumlahContact] = useState(0)\r\n    const [jumlahJob, setJumlahJob] = useState(0)\r\n    const [jumlahProduct, setJumlahProduct] = useState(0)\r\n    const [jumlahRadio, setJumlahRadio] = useState(0)\r\n    const [radiocoverage, setRadioCoverage] = useState('')\r\n    const map = useRef();\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    useEffect(() => {\r\n        if (currentPage) {\r\n            fetchContact().then(() => {\r\n                setLoading(true)\r\n            })\r\n        }\r\n    }, [currentPage])\r\n\r\n    const fetchContact = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/contact?page=${currentPage}`, {\r\n                method: 'GET'\r\n            })\r\n            const datacontact = await data.json()\r\n            if (datacontact.success) {\r\n                setPageCount(datacontact.from)\r\n                setContact(datacontact.result.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (selectedObject) => {\r\n        setCurrentPage(selectedObject.selected + 1)\r\n        fetchContact()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAmountContact()\r\n            .then(() => {\r\n                getAmountJob()\r\n            }).then(() => {\r\n                getAmoutApps()\r\n            }).then(() => {\r\n                getAmountRadio()\r\n            }).then(() => {\r\n                getRadioCover()\r\n            })\r\n    }, [])\r\n\r\n    const getAmountContact = async () => {\r\n        const datacontact = await fetch(`${URL_API}/contact/count`, {\r\n            method: 'GET'\r\n        })\r\n        const contact = await datacontact.json()\r\n        setJumlahContact(contact.result)\r\n    }\r\n\r\n    const getAmountJob = async () => {\r\n        const datajob = await fetch(`${URL_API}/job`, {\r\n            method: 'GET'\r\n        })\r\n        const job = await datajob.json()\r\n        setJumlahJob(job.result.length)\r\n    }\r\n\r\n    const getAmoutApps = async () => {\r\n        const dataapps = await fetch(`${URL_API}/product`, {\r\n            method: 'GET'\r\n        })\r\n        const apps = await dataapps.json()\r\n        setJumlahProduct(apps.result.length)\r\n    }\r\n\r\n    const getAmountRadio = async () => {\r\n        const dataradio = await fetch(`${URL_API}/radio`, {\r\n            method: 'GET'\r\n        })\r\n        const radio = await dataradio.json()\r\n        setJumlahRadio(radio.result.length)\r\n    }\r\n\r\n    const getRadioCover = async () => {\r\n        const data = await fetch(`${URL_API}/radiocoverage`, {\r\n            method: 'GET'\r\n        })\r\n        const resp = await data.json()\r\n        console.log(resp.result)\r\n        setRadioCoverage(resp.result)\r\n    }\r\n\r\n\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Dashboard </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Dashboard</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"d-flex align-items-center align-self-start\">\r\n                                            <h3 className=\"text-success mb-0\"><CountUp end={jumlahProduct} duration={5} /></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"icon icon-box-success \">\r\n                                            <span className=\"mdi mdi-apps icon-item\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h6 className=\"text-muted font-weight-normal\">Application Product</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"d-flex align-items-center align-self-start\">\r\n                                            <h3 className=\"text-primary mb-0\"><CountUp end={jumlahContact} duration={5} /></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"icon icon-box-primary\">\r\n                                            <span className=\"mdi mdi-wechat icon-item\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h6 className=\"text-muted font-weight-normal\">Contact Message</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"d-flex align-items-center align-self-start\">\r\n                                            <h3 className=\"text-warning mb-0\"><CountUp end={jumlahJob} duration={5} /></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"icon icon-box-warning\">\r\n                                            <span className=\"mdi mdi-briefcase icon-item\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h6 className=\"text-muted font-weight-normal\">Available Work</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"d-flex align-items-center align-self-start\">\r\n                                            <h3 className=\"text-danger mb-0\"><CountUp end={jumlahRadio} duration={5} /></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"icon icon-box-danger \">\r\n                                            <span className=\"mdi mdi-radio icon-item\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h6 className=\"text-muted font-weight-normal\">Radio Channel</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin stretch-card\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"d-flex flex-row justify-content-between\">\r\n                                    <h4 className=\"card-title mb-1\">People Who Contact Us</h4>\r\n                                    <p className=\"breadcrumb-item mb-1\"><a href=\"/contactmenu\">See Detail...</a></p>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {contact.length > 0 &&\r\n                                        contact.map((item) => {\r\n                                            return (\r\n                                                <div className=\"col-12\" key={item.id}>\r\n                                                    <div className=\"preview-list\">\r\n                                                        <div className=\"preview-item border-bottom\">\r\n                                                            <div className=\"preview-thumbnail\">\r\n                                                                <div className=\"preview-icon bg-primary\">\r\n                                                                    <i className=\"mdi mdi-message\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\r\n                                                                <div className=\"flex-grow\">\r\n                                                                    <h6 className=\"preview-subject\">{item.email}</h6>\r\n                                                                    <p className=\"text-muted mb-0\">{item.message}</p>\r\n                                                                </div>\r\n                                                                <div className=\"mr-auto text-sm-right pt-2 pt-sm-0\">\r\n                                                                    <p className=\"text-muted\">{item.created_at.slice(0, 19).replace('T', ' ')}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    {contact.length === 0 &&\r\n                                        <div style={{ marginTop: \"7%\", marginBottom: \"4%\", marginLeft: \"40%\" }}>No One People Contact Us</div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {loading ? (\r\n                                <ReactPaginate\r\n                                    pageCount={pageCount}\r\n                                    onPageChange={handlePageChange}\r\n                                    containerClassName={'paginate'}\r\n                                    previousLinkClassName={'previous'}\r\n                                    breakClassName={'break'}\r\n                                    nextLinkClassName={'next'}\r\n                                    pageClassName={'page'}\r\n                                    disabledClassName={'disabled'}\r\n                                    activeClassName={'activepaginate'}\r\n                                />\r\n                            ) : (\r\n                                    <div></div>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Data Radio Coverage</h4>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-5\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    {radiocoverage.length > 0 &&\r\n                                                        radiocoverage.map((item) => {\r\n                                                            return (\r\n                                                                <tr key={item.id}>\r\n                                                                    <td>\r\n                                                                        <i className=\"flag-icon flag-icon-id\" />\r\n                                                                    </td>\r\n                                                                    <td>{item.provinsi}</td>\r\n                                                                    <td className=\"text-right\"> {item.kota} </td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    {radiocoverage.length === 0 &&\r\n                                        <h3 style={{ textAlign: 'center', marginTop: '5%', marginBottom: '7%' }}>No data in here!</h3>\r\n                                    }\r\n                                    <div className=\"col-md-7\">\r\n                                        {radiocoverage.length > 0 &&\r\n                                            <div style={{ width: 650, height: 300 }}>\r\n                                                <VectorMap\r\n                                                    map={\"indonesia\"}\r\n                                                    backgroundColor=\"#191C24\"\r\n                                                    ref={map}\r\n                                                    containerStyle={{\r\n                                                        width: '100%',\r\n                                                        height: '100%'\r\n                                                    }}\r\n                                                    containerClassName=\"map\"\r\n                                                />\r\n                                            </div>\r\n                                        }\r\n                                        {radiocoverage.length === 0 &&\r\n                                            <div></div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default Dashboard","/media/jibran/New Volume/React Project/company_profile/src/Screens/UserMenu.jsx",["79"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst UserMenu = () => {\r\n    const [tableUser, setTableUser] = useState('')\r\n    const [idUser, setUserId] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [gambaruser, setGambar] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    useEffect(() => {\r\n        fetchUser()\r\n            .then(() => {\r\n                setLoading(true)\r\n            })\r\n    }, [])\r\n\r\n    // fetch data\r\n    const fetchUser = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/user`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            dataTableUser(resp.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    // Setting the data table\r\n    const dataTableUser = user => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < user.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"username\"] = user[index].username\r\n            rowItem[\"email\"] = user[index].email\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={event => getIdUser(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={user[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={event => deleteUser(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={user[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableUser(rowsData)\r\n    }\r\n\r\n    // Data user\r\n    const dataUser = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Username',\r\n                    field: 'username',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const data = await fetch(`${URL_API}/user/store`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp)\r\n            if (resp.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Job',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setUsername('')\r\n                    setEmail('')\r\n                    setPassword('')\r\n                    setGambar('')\r\n                    fetchUser()\r\n                        .then(() => {\r\n                            setLoading(true)\r\n                        })\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n\r\n            if (!resp.success) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'There is an error!',\r\n                    html:\r\n                        '<ul> ' +\r\n                        '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                        '</ul > '\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const getIdUser = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/user/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            setUserId(resp.data.id)\r\n            setUsername(resp.data.username)\r\n            setEmail(resp.data.email)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const handleEdit = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const data = await fetch(`${URL_API}/userupdate/${idUser}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    username,\r\n                    email,\r\n                    password\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp)\r\n            if (resp.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Job',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setUsername('')\r\n                    setEmail('')\r\n                    setPassword('')\r\n                    fetchUser()\r\n                        .then(() => {\r\n                            setLoading(true)\r\n                        })\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n            if (!resp.success) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'There is an error!',\r\n                    html:\r\n                        '<ul> ' +\r\n                        '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                        '</ul > '\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    // Delete user\r\n    const deleteUser = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data user has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const userDelete = await fetch(`${URL_API}/user/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await userDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchUser()\r\n                        .then(() => {\r\n                            setLoading(true)\r\n                        })\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> User Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">User Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Job */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data User</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    noBottomColumns={true}\r\n                                    data={dataUser(tableUser)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <input\r\n                                            style={{\r\n                                                borderRadius: \"5px\",\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"username\"\r\n                                            placeholder=\"enter your username\"\r\n                                            value={username}\r\n                                            onChange={e => setUsername(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <input\r\n                                            style={{\r\n                                                borderRadius: \"5px\",\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"email@example.com\"\r\n                                            value={email}\r\n                                            onChange={e => setEmail(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <input style={{\r\n                                            borderRadius: \"5px\",\r\n                                            padding: \"10px\"\r\n                                        }}\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"enter your passsword\"\r\n                                            value={password}\r\n                                            onChange={e => setPassword(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Image User</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"gambar_user\"\r\n                                            className=\"form-control-file\"\r\n                                            id=\"exampleFormControlFile1\"\r\n                                            value={gambaruser}\r\n                                            onChange={e => setGambar(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <input\r\n                                            style={{\r\n                                                borderRadius: \"5px\",\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"username\"\r\n                                            placeholder=\"enter your username\"\r\n                                            value={username}\r\n                                            onChange={e => setUsername(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Email</label>\r\n                                        <input\r\n                                            style={{\r\n                                                borderRadius: \"5px\",\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"enter your email\"\r\n                                            value={email}\r\n                                            onChange={e => setEmail(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group mb-4\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <input style={{\r\n                                            borderRadius: \"5px\",\r\n                                            padding: \"10px\"\r\n                                        }}\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"enter your passsword\"\r\n                                            value={password}\r\n                                            onChange={e => setPassword(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default UserMenu","/media/jibran/New Volume/React Project/company_profile/src/Components/Login.jsx",[],"/media/jibran/New Volume/React Project/company_profile/src/Components/Navbar.jsx",[],"/media/jibran/New Volume/React Project/company_profile/src/Screens/DigitalAds.jsx",["80"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst DigitalAds = () => {\r\n    const [tableAds, setTableAds] = useState('')\r\n    const [idAds, setIdAds] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    // this for add\r\n    const [image, setImage] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [subtitle, setSubtitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    // this for edit\r\n    const [imageEdit, setImageEdit] = useState('')\r\n\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableAds = data => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < data.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"image\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={data[index].image} alt=\"tidak ada gambar\" />\r\n            rowItem[\"title\"] = data[index].title\r\n            rowItem[\"subtitle\"] = data[index].subtitle\r\n            rowItem[\"description\"] = data[index].description\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={event => getIdApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={data[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={event => deleteAds(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={data[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableAds(rowsData)\r\n    }\r\n\r\n    const fetchAds = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/ads`, {\r\n                method: 'GET'\r\n            })\r\n            const datapps = await data.json()\r\n            dataTableAds(datapps.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAds().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    // Data ads\r\n    const dataAds = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image',\r\n                    field: 'image',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'subtitle',\r\n                    field: 'subtitle',\r\n                    sort: 'asc'\r\n                },\r\n\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add apps\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/ads/store`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setImage('')\r\n                    setDescription('')\r\n                    setSubtitle('')\r\n                    setTitle('')\r\n                    fetchAds().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id apps\r\n    const getIdApps = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/ads/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const result = await data.json()\r\n            setIdAds(result.data.id)\r\n            setTitle(result.data.title)\r\n            setSubtitle(result.data.subtitle)\r\n            setDescription(result.data.description)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // handle submit edit apps\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/ads/update/${idAds}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setImage('')\r\n                    setDescription('')\r\n                    setSubtitle('')\r\n                    setTitle('')\r\n                    fetchAds().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete apps\r\n    const deleteAds = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const Delete = await fetch(`${URL_API}/ads/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await Delete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchAds().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Digital Ads Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Digital Ads Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Apps */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data How Digital Ads Work</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                    Add Modal\r\n                                                    </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    noBottomColumns={true}\r\n                                    striped\r\n                                    data={dataAds(tableAds)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 1\"\r\n                                            onChange={e => setTitle(e.target.value)}\r\n                                            value={title}\r\n                                            name=\"title\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Sub Title</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title fiture product 1\"\r\n                                            onChange={e => setSubtitle(e.target.value)}\r\n                                            value={subtitle}\r\n                                            name=\"subtitle\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDescription(e.target.value)}\r\n                                            value={description}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={image}\r\n                                            onChange={e => setImage(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Title</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input title\"\r\n                                            onChange={e => setTitle(e.target.value)}\r\n                                            value={title}\r\n                                            name=\"title\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Sub Title</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input sub title\"\r\n                                            onChange={e => setSubtitle(e.target.value)}\r\n                                            value={subtitle}\r\n                                            name=\"subtitle\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input description\"\r\n                                            onChange={e => setDescription(e.target.value)}\r\n                                            value={description}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={imageEdit}\r\n                                            onChange={e => setImageEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default DigitalAds","/media/jibran/New Volume/React Project/company_profile/src/Components/Register.jsx",[],"/media/jibran/New Volume/React Project/company_profile/src/Screens/RadioCoverage.jsx",["81"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst RadioCoverage = () => {\r\n    const [tableradioCoverage, setTableRadioCoverage] = useState('')\r\n    const [idRadioCoverage, setIdRadioCoverage] = useState('')\r\n    const [provinsi, setProvinsi] = useState('')\r\n    const [kota, setKota] = useState('')\r\n    const [stasiun_id, setStasiunFm] = useState('')\r\n    const [fm, setFm] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [idProvinsi, setIdProvinsi] = useState(0)\r\n    const [provinsiPilih, setProvinsiPilih] = useState('')\r\n    const [kotaPilih, setKotaPilih] = useState('')\r\n    const Swal = withReactContent(MySwal)\r\n    const keyAPI = `5ZZHvtG7IvXmVDSCLTB73gd1XwqFjaWUiiTZrz1exj8pLIbFFm`\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableRadioCoverage = radiocoverage => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < radiocoverage.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"provinsi\"] = radiocoverage[index].provinsi\r\n            rowItem[\"kota\"] = radiocoverage[index].kota\r\n            rowItem[\"stasiun_id\"] = radiocoverage[index].stasiun_id\r\n            rowItem[\"fm\"] = radiocoverage[index].fm\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} onClick={event => getIdRadioCoverage(event)} data-toggle=\"modal\" data-target=\"#editModalCoverage\" className=\"btn btn-primary\" type=\"button\" id={radiocoverage[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={e => deleteRadioCoverage(e)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={radiocoverage[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableRadioCoverage(rowsData)\r\n    }\r\n\r\n    const fetchRadioCoverage = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/radiocoverage`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            dataTableRadioCoverage(resp.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRadioCoverage()\r\n            .then(() => {\r\n                setLoading(true)\r\n            }).then(() => {\r\n                getProvinsi()\r\n            })\r\n\r\n        if (idProvinsi) {\r\n            getKota()\r\n        }\r\n    }, [idProvinsi])\r\n\r\n    // Data radio coverage\r\n    const dataRadioCoverage = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Province',\r\n                    field: 'provinsi',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'City',\r\n                    field: 'kota',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'ID Station',\r\n                    field: 'stasiun_id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'FM',\r\n                    field: 'fm',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add radio\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/radiocoverage/store`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    provinsi,\r\n                    kota,\r\n                    stasiun_id,\r\n                    fm\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Radio Coverage',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setProvinsi('')\r\n                    setKotaPilih('')\r\n                    setKota('')\r\n                    setStasiunFm('')\r\n                    setFm('')\r\n                    fetchRadioCoverage().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    window.$('#addModalCoverage').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id radio Coverage\r\n    const getIdRadioCoverage = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/radiocoverage/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            setIdRadioCoverage(resp.data.id)\r\n            setProvinsi(resp.data.provinsi)\r\n            setKota(resp.data.kota)\r\n            setStasiunFm(resp.data.stasiun_id)\r\n            setFm(resp.data.fm)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Handle edit\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const updateJob = await fetch(`${URL_API}/radiocoverage/update/${idRadioCoverage}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    provinsi,\r\n                    kota,\r\n                    stasiun_id,\r\n                    fm\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const update = await updateJob.json()\r\n            if (update.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Radio Coverage',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setProvinsi('')\r\n                    setKotaPilih('')\r\n                    setKota('')\r\n                    setStasiunFm('')\r\n                    setFm('')\r\n                    fetchRadioCoverage().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    window.$('#editModalCoverage').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete radio\r\n    const deleteRadioCoverage = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data radio coverage has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/radiocoverage/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchRadioCoverage().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProvinsi = async () => {\r\n        try {\r\n            const data = await fetch(`https://x.rajaapi.com/MeP7c5ne${keyAPI}/m/wilayah/provinsi`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            if (resp.success) {\r\n                setProvinsiPilih(resp.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const getKota = async () => {\r\n        try {\r\n            const data = await fetch(`https://x.rajaapi.com/MeP7c5ne${keyAPI}/m/wilayah/kabupaten?idpropinsi=${idProvinsi}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            if (resp.success) {\r\n                setKotaPilih(resp.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* Area Table Radio Coverage */}\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        {/* Card Header - Dropdown */}\r\n                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Data Radio Coverage</h6>\r\n                            <div className=\"dropdown no-arrow\">\r\n                                <a className=\"dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                    <div className=\"dropdown-header\">Action:</div>\r\n                                    <a className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#addModalCoverage\">\r\n                                        <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    <a data-toggle=\"modal\" data-target=\"#printModal\" className=\"dropdown-item\" >\r\n                                        <i className=\"mdi mdi-file-pdf\" style={{ color: \"blue\", marginRight: \"10px\" }} />Print Pdf\r\n                                            </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Card Body */}\r\n                        <div className=\"card-body\">\r\n                            <MDBDataTable\r\n                                style={{ color: \"white\" }}\r\n                                sortable={false}\r\n                                striped\r\n                                noBottomColumns={true}\r\n                                responsive={true}\r\n                                data={dataRadioCoverage(tableradioCoverage)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModalCoverage\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={provinsi}\r\n                                            onChange={e => setProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsiPilih.length > 0 &&\r\n                                                provinsiPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsiPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi Untuk Memilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={idProvinsi}\r\n                                            onChange={e => setIdProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsiPilih.length > 0 &&\r\n                                                provinsiPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsiPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect3\">Pilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"kota\"\r\n                                            id=\"exampleFormControlSelect3\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={kota}\r\n                                            onChange={e => setKota(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {kotaPilih.length > 0 &&\r\n                                                kotaPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {kotaPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Stasiun Id</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"Just fill it\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={stasiun_id}\r\n                                            onChange={e => setStasiunFm(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">FM Channel</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"95.5 FM\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={fm}\r\n                                            onChange={e => setFm(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModalCoverage\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={provinsi}\r\n                                            onChange={e => setProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsiPilih.length > 0 &&\r\n                                                provinsiPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsiPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi Untuk Memilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={idProvinsi}\r\n                                            onChange={e => setIdProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsiPilih.length > 0 &&\r\n                                                provinsiPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsiPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect3\">Pilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"kota\"\r\n                                            id=\"exampleFormControlSelect3\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={kota}\r\n                                            onChange={e => setKota(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {kotaPilih.length > 0 &&\r\n                                                kotaPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {kotaPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Stasiun Id</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"Just fill it\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={stasiun_id}\r\n                                            onChange={e => setStasiunFm(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">FM Channel</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"95.5 FM\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={fm}\r\n                                            onChange={e => setFm(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Print Modal --> */}\r\n                <div className=\"modal fade\" id=\"printModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Print Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form >\r\n                                <div className=\"modal-body\">\r\n\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default RadioCoverage",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":8,"nodeType":"88","endLine":19,"endColumn":10,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":68,"column":8,"nodeType":"88","endLine":68,"endColumn":20,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"92","line":38,"column":8,"nodeType":"88","endLine":38,"endColumn":10,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":88,"column":8,"nodeType":"88","endLine":88,"endColumn":10,"suggestions":"95"},{"ruleId":"86","severity":1,"message":"87","line":34,"column":8,"nodeType":"88","endLine":34,"endColumn":21,"suggestions":"96"},{"ruleId":"86","severity":1,"message":"97","line":68,"column":8,"nodeType":"88","endLine":68,"endColumn":10,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"99","line":26,"column":8,"nodeType":"88","endLine":26,"endColumn":10,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"101","line":65,"column":8,"nodeType":"88","endLine":65,"endColumn":10,"suggestions":"102"},{"ruleId":"86","severity":1,"message":"103","line":70,"column":8,"nodeType":"88","endLine":70,"endColumn":20,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchContact'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'fetchRadio', 'getKota', and 'getProvinsi'. Either include them or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'fetchJob'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'fetchApps'. Either include it or remove the dependency array.",["110"],["111"],"React Hook useEffect has missing dependencies: 'getAmountContact', 'getAmountJob', 'getAmountRadio', 'getAmoutApps', and 'getRadioCover'. Either include them or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'fetchAds'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'fetchRadioCoverage', 'getKota', and 'getProvinsi'. Either include them or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [fetchContact]",{"range":"134","text":"135"},"Update the dependencies array to be: [fetchRadio, getKota, getProvinsi, idProvinsi]",{"range":"136","text":"137"},"Update the dependencies array to be: [fetchJob]",{"range":"138","text":"139"},"Update the dependencies array to be: [fetchApps]",{"range":"140","text":"141"},"Update the dependencies array to be: [currentPage, fetchContact]",{"range":"142","text":"143"},"Update the dependencies array to be: [getAmountContact, getAmountJob, getAmountRadio, getAmoutApps, getRadioCover]",{"range":"144","text":"145"},"Update the dependencies array to be: [fetchUser]",{"range":"146","text":"147"},"Update the dependencies array to be: [fetchAds]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchRadioCoverage, getKota, getProvinsi, idProvinsi]",{"range":"150","text":"151"},[539,541],"[fetchContact]",[2570,2582],"[fetchRadio, getKota, getProvinsi, idProvinsi]",[1207,1209],"[fetchJob]",[3954,3956],"[fetchApps]",[1185,1198],"[currentPage, fetchContact]",[2156,2158],"[getAmountContact, getAmountJob, getAmountRadio, getAmoutApps, getRadioCover]",[836,838],"[fetchUser]",[2555,2557],"[fetchAds]",[2902,2914],"[fetchRadioCoverage, getKota, getProvinsi, idProvinsi]"]