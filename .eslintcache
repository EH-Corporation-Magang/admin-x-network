[{"D:\\React Project\\company_profile\\src\\index.js":"1","D:\\React Project\\company_profile\\src\\reportWebVitals.js":"2","D:\\React Project\\company_profile\\src\\App.js":"3","D:\\React Project\\company_profile\\src\\Components\\Navbar.jsx":"4","D:\\React Project\\company_profile\\src\\Screens\\Dashboard.jsx":"5","D:\\React Project\\company_profile\\src\\Components\\Login.jsx":"6","D:\\React Project\\company_profile\\src\\Components\\Register.jsx":"7","D:\\React Project\\company_profile\\src\\Screens\\CareerMenu.jsx":"8","D:\\React Project\\company_profile\\src\\Screens\\ProfileMenu.jsx":"9","D:\\React Project\\company_profile\\src\\Screens\\ContactMenu.jsx":"10","D:\\React Project\\company_profile\\src\\Screens\\AppsMenu.jsx":"11","D:\\React Project\\company_profile\\src\\Screens\\RadioMenu.jsx":"12","D:\\React Project\\company_profile\\src\\Screens\\RadioCoverage.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":7055,"mtime":1610071667274,"results":"17","hashOfConfig":"15"},{"size":4300,"mtime":1610070764381,"results":"18","hashOfConfig":"15"},{"size":12473,"mtime":1610089852529,"results":"19","hashOfConfig":"15"},{"size":6188,"mtime":1609822272851,"results":"20","hashOfConfig":"15"},{"size":7462,"mtime":1609924610124,"results":"21","hashOfConfig":"15"},{"size":22590,"mtime":1610074829088,"results":"22","hashOfConfig":"15"},{"size":8371,"mtime":1610070802648,"results":"23","hashOfConfig":"15"},{"size":6643,"mtime":1610072037955,"results":"24","hashOfConfig":"15"},{"size":44046,"mtime":1610072023302,"results":"25","hashOfConfig":"15"},{"size":24029,"mtime":1610091324894,"results":"26","hashOfConfig":"15"},{"size":30888,"mtime":1610095428426,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1pr9iyl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React Project\\company_profile\\src\\index.js",[],["57","58"],"D:\\React Project\\company_profile\\src\\reportWebVitals.js",[],"D:\\React Project\\company_profile\\src\\App.js",[],"D:\\React Project\\company_profile\\src\\Components\\Navbar.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\Dashboard.jsx",["59","60"],"D:\\React Project\\company_profile\\src\\Components\\Login.jsx",[],"D:\\React Project\\company_profile\\src\\Components\\Register.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\CareerMenu.jsx",["61"],"D:\\React Project\\company_profile\\src\\Screens\\ProfileMenu.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\ContactMenu.jsx",["62"],"D:\\React Project\\company_profile\\src\\Screens\\AppsMenu.jsx",["63"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst AppsMenu = () => {\r\n    const [tableApps, setTableApps] = useState('')\r\n    const [idApps, setIdApps] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n\r\n    // this for add\r\n    const [icon, setIcon] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [deskripsi, setDeskripsi] = useState('')\r\n    const [iconfiture1, setIconFiture1] = useState('')\r\n    const [fiture1, setFiture1] = useState('')\r\n    const [iconfiture2, setIconFiture2] = useState('')\r\n    const [fiture2, setFiture2] = useState('')\r\n    const [iconfiture3, setIconFiture3] = useState('')\r\n    const [fiture3, setFiture3] = useState('')\r\n    const [iconfiture4, setIconFiture4] = useState('')\r\n    const [fiture4, setFiture4] = useState('')\r\n    const [iconfiture5, setIconFiture5] = useState('')\r\n    const [fiture5, setFiture5] = useState('')\r\n    const [iconfiture6, setIconFiture6] = useState('')\r\n    const [fiture6, setFiture6] = useState('')\r\n\r\n    // this for edit\r\n    const [iconEdit, setIconEdit] = useState('')\r\n    const [imageEdit, setImageEdit] = useState('')\r\n    const [iconfitureEdit1, setIconFitureEdit1] = useState('')\r\n    const [iconfitureEdit2, setIconFitureEdit2] = useState('')\r\n    const [iconfitureEdit3, setIconFitureEdit3] = useState('')\r\n    const [iconfitureEdit4, setIconFitureEdit4] = useState('')\r\n    const [iconfitureEdit5, setIconFitureEdit5] = useState('')\r\n    const [iconfitureEdit6, setIconFitureEdit6] = useState('')\r\n\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableApps = apps => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < apps.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"icon\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon} alt=\"tidak ada gambar\" />\r\n            rowItem[\"imageproduct\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].image} alt=\"tidak ada gambar\" />\r\n            rowItem[\"deskripsi\"] = apps[index].description\r\n            rowItem[\"fiture1\"] = apps[index].fiture1\r\n            rowItem[\"iconfiture1\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture1} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture2\"] = apps[index].fiture2\r\n            rowItem[\"iconfiture2\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture2} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture3\"] = apps[index].fiture3\r\n            rowItem[\"iconfiture3\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture3} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture4\"] = apps[index].fiture4\r\n            rowItem[\"iconfiture4\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture4} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture5\"] = apps[index].fiture5\r\n            rowItem[\"iconfiture5\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture5} alt=\"tidak ada gambar\" />\r\n            rowItem[\"fiture6\"] = apps[index].fiture6\r\n            rowItem[\"iconfiture6\"] = <img style={{ width: \"100px\", height: \"100px\", borderRadius: \"0px\" }} src={apps[index].icon_fiture6} alt=\"tidak ada gambar\" />\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={event => getIdApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={event => deleteApps(event)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableApps(rowsData)\r\n    }\r\n\r\n    const fetchApps = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product`, {\r\n                method: 'GET'\r\n            })\r\n            const datapps = await data.json()\r\n            dataTableApps(datapps.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApps().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    // Data apps\r\n    const dataApps = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Product',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Product',\r\n                    field: 'imageproduct',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description Product',\r\n                    field: 'deskripsi',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 1',\r\n                    field: 'fiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 1',\r\n                    field: 'iconfiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 2',\r\n                    field: 'fiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 2',\r\n                    field: 'iconfiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 3',\r\n                    field: 'fiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 3',\r\n                    field: 'iconfiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 4',\r\n                    field: 'fiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 4',\r\n                    field: 'iconfiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 5',\r\n                    field: 'fiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 5',\r\n                    field: 'iconfiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 6',\r\n                    field: 'fiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 6',\r\n                    field: 'iconfiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add apps\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/store`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIcon('')\r\n                    setImage('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setIconFiture1('')\r\n                    setFiture2('')\r\n                    setIconFiture2('')\r\n                    setFiture3('')\r\n                    setIconFiture3('')\r\n                    setFiture4('')\r\n                    setIconFiture4('')\r\n                    setFiture5('')\r\n                    setIconFiture5('')\r\n                    setFiture6('')\r\n                    setIconFiture6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id apps\r\n    const getIdApps = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const result = await data.json()\r\n            console.log(result.data)\r\n            setIdApps(result.data.id)\r\n            setDeskripsi(result.data.description)\r\n            setFiture1(result.data.fiture1)\r\n            setFiture2(result.data.fiture2)\r\n            setFiture3(result.data.fiture3)\r\n            setFiture4(result.data.fiture4)\r\n            setFiture5(result.data.fiture5)\r\n            setFiture6(result.data.fiture6)\r\n            console.log(icon)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // handle submit edit apps\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/update/${idApps}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIconEdit('')\r\n                    setImageEdit('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setIconFitureEdit1('')\r\n                    setFiture2('')\r\n                    setIconFitureEdit2('')\r\n                    setFiture3('')\r\n                    setIconFitureEdit3('')\r\n                    setFiture4('')\r\n                    setIconFitureEdit4('')\r\n                    setFiture5('')\r\n                    setIconFitureEdit5('')\r\n                    setFiture6('')\r\n                    setIconFitureEdit6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete apps\r\n    const deleteApps = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data Apps has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/product/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Apps Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Apps Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Apps */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Aplication Product</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    noBottomColumns={true}\r\n                                    striped\r\n                                    data={dataApps(tableApps)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                            <li>Maximum letters is 255</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={icon}\r\n                                            onChange={e => setIcon(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={image}\r\n                                            onChange={e => setImage(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 1</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture1\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture1}\r\n                                            onChange={e => setIconFiture1(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 2</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture2\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture2}\r\n                                            onChange={e => setIconFiture2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 3</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture3\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture3}\r\n                                            onChange={e => setIconFiture3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 4</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture4\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture4}\r\n                                            onChange={e => setIconFiture4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 5</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture5\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture5}\r\n                                            onChange={e => setIconFiture5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 6</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture6\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture6}\r\n                                            onChange={e => setIconFiture6(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                            <li>Maximum letters is 255</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconEdit}\r\n                                            onChange={e => setIconEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={imageEdit}\r\n                                            onChange={e => setImageEdit(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Product Description</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input product description\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 1</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture1\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit1}\r\n                                            onChange={e => setIconFitureEdit1(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 2</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture2\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit2}\r\n                                            onChange={e => setIconFitureEdit2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 3</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture3\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit3}\r\n                                            onChange={e => setIconFitureEdit3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 4</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture4\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit4}\r\n                                            onChange={e => setIconFitureEdit4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 5</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture5\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit5}\r\n                                            onChange={e => setIconFitureEdit5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 6</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture6\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfitureEdit6}\r\n                                            onChange={e => setIconFitureEdit6(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default AppsMenu","D:\\React Project\\company_profile\\src\\Screens\\RadioMenu.jsx",["64"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport RadioCoverage from './RadioCoverage';\r\n\r\n\r\nconst RadioMenu = () => {\r\n    const [tableRadio, setTableRadio] = useState('')\r\n    const [idRadio, setIdRadio] = useState('')\r\n    const [fm_channel, setFmChannel] = useState('')\r\n    const [kota, setKota] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [idProvinsi, setIdProvinsi] = useState(0)\r\n    const [provinsi, setProvinsi] = useState('')\r\n    const [kotaPilih, setKotaPilih] = useState('')\r\n    const Swal = withReactContent(MySwal)\r\n    const keyAPI = `5ZZHvtG7IvXmVDSCLTB73gd1XwqFjaWUiiTZrz1exj8pLIbFFm`\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableRadio = radio => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < radio.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"fm\"] = radio[index].fm_channel\r\n            rowItem[\"kota\"] = radio[index].kota\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} onClick={event => getIdRadio(event)} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={radio[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button onClick={e => deleteRadio(e)} style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={radio[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableRadio(rowsData)\r\n    }\r\n\r\n    const fetchRadio = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/radio`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            dataTableRadio(resp.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRadio()\r\n            .then(() => {\r\n                setLoading(true)\r\n            }).then(() => {\r\n                getProvinsi()\r\n            })\r\n\r\n        if (idProvinsi) {\r\n            getKota()\r\n        }\r\n    }, [idProvinsi])\r\n\r\n    // Data radio\r\n    const dataRadio = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'FM Channel',\r\n                    field: 'fm',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'City',\r\n                    field: 'kota',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add radio\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/radio/store`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    fm_channel,\r\n                    kota\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Radio',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setFmChannel('')\r\n                    setKota('')\r\n                    setIdProvinsi('')\r\n                    fetchRadio().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Get id radio\r\n    const getIdRadio = async e => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/radio/get/${e.target.id}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            setIdRadio(resp.data.id)\r\n            setFmChannel(resp.data.fm_channel)\r\n            setKota(resp.data.kota)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Handle edit\r\n    const handleEdit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const updateJob = await fetch(`${URL_API}/radio/update/${idRadio}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    fm_channel,\r\n                    kota\r\n                }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            const update = await updateJob.json()\r\n            if (update.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Edit Data Radio',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setFmChannel('')\r\n                    setKota('')\r\n                    setIdProvinsi('')\r\n                    fetchRadio().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    window.$('#editModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Delete radio\r\n    const deleteRadio = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data radio has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const siswaDelete = await fetch(`${URL_API}/radio/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await siswaDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchRadio().then(() => {\r\n                        setLoading(true)\r\n                    })\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProvinsi = async () => {\r\n        try {\r\n            const data = await fetch(`https://x.rajaapi.com/MeP7c5ne${keyAPI}/m/wilayah/provinsi`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            if (resp.success) {\r\n                setProvinsi(resp.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const getKota = async () => {\r\n        try {\r\n            const data = await fetch(`https://x.rajaapi.com/MeP7c5ne${keyAPI}/m/wilayah/kabupaten?idpropinsi=${idProvinsi}`, {\r\n                method: 'GET'\r\n            })\r\n            const resp = await data.json()\r\n            console.log(resp.data)\r\n            if (resp.success) {\r\n                setKotaPilih(resp.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Radio Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Radio Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Radio */}\r\n                    <div className=\"col-xl-6 col-lg-6\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Radio</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    noBottomColumns={true}\r\n                                    responsive={true}\r\n                                    data={dataRadio(tableRadio)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Area Table Radio Coverage */}\r\n                    <RadioCoverage />\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">FM Channel</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"95.5 FM\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={fm_channel}\r\n                                            onChange={e => setFmChannel(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={idProvinsi}\r\n                                            onChange={e => setIdProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsi.length > 0 &&\r\n                                                provinsi.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsi.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect3\">Pilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"kota\"\r\n                                            id=\"exampleFormControlSelect3\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={kota}\r\n                                            onChange={e => setKota(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {kotaPilih.length > 0 &&\r\n                                                kotaPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {kotaPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\">Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Edit Modal --> */}\r\n                <div className=\"modal fade\" id=\"editModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleEdit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">FM Channel</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"fm_channel\"\r\n                                            id=\"exampleFormControlInput1\"\r\n                                            placeholder=\"95.5 FM\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={fm_channel}\r\n                                            onChange={e => setFmChannel(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect2\">Pilih Provinsi</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            id=\"exampleFormControlSelect2\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={idProvinsi}\r\n                                            onChange={e => setIdProvinsi(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {provinsi.length > 0 &&\r\n                                                provinsi.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {provinsi.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect3\">Pilih Kota</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"kota\"\r\n                                            id=\"exampleFormControlSelect3\"\r\n                                            style={{ color: \"white\" }}\r\n                                            value={kota}\r\n                                            onChange={e => setKota(e.target.value)}\r\n                                        >\r\n                                            <option selected>Choose...</option>\r\n                                            {kotaPilih.length > 0 &&\r\n                                                kotaPilih.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item.id} value={item.name}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            {kotaPilih.length === 0 &&\r\n                                                <option disabled>Nothing in here</option>\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Edit Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default RadioMenu","D:\\React Project\\company_profile\\src\\Screens\\RadioCoverage.jsx",["65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":30,"column":8,"nodeType":"72","endLine":30,"endColumn":21,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":94,"column":8,"nodeType":"72","endLine":94,"endColumn":10,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"76","line":38,"column":8,"nodeType":"72","endLine":38,"endColumn":10,"suggestions":"77"},{"ruleId":"70","severity":1,"message":"71","line":19,"column":8,"nodeType":"72","endLine":19,"endColumn":10,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":94,"column":8,"nodeType":"72","endLine":94,"endColumn":10,"suggestions":"80"},{"ruleId":"70","severity":1,"message":"81","line":68,"column":8,"nodeType":"72","endLine":68,"endColumn":20,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"83","line":70,"column":8,"nodeType":"72","endLine":70,"endColumn":20,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchContact'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'getAmountContact', 'getAmountJob', 'getAmountRadio', and 'getAmoutApps'. Either include them or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'fetchJob'. Either include it or remove the dependency array.",["89"],["90"],"React Hook useEffect has a missing dependency: 'fetchApps'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'fetchRadio', 'getKota', and 'getProvinsi'. Either include them or remove the dependency array.",["92"],"React Hook useEffect has missing dependencies: 'fetchRadioCoverage', 'getKota', and 'getProvinsi'. Either include them or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [currentPage, fetchContact]",{"range":"108","text":"109"},"Update the dependencies array to be: [getAmountContact, getAmountJob, getAmountRadio, getAmoutApps]",{"range":"110","text":"111"},"Update the dependencies array to be: [fetchJob]",{"range":"112","text":"113"},"Update the dependencies array to be: [fetchContact]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchApps]",{"range":"116","text":"117"},"Update the dependencies array to be: [fetchRadio, getKota, getProvinsi, idProvinsi]",{"range":"118","text":"119"},"Update the dependencies array to be: [fetchRadioCoverage, getKota, getProvinsi, idProvinsi]",{"range":"120","text":"121"},[1038,1051],"[currentPage, fetchContact]",[2912,2914],"[getAmountContact, getAmountJob, getAmountRadio, getAmoutApps]",[1207,1209],"[fetchJob]",[539,541],"[fetchContact]",[4929,4931],"[fetchApps]",[2570,2582],"[fetchRadio, getKota, getProvinsi, idProvinsi]",[2902,2914],"[fetchRadioCoverage, getKota, getProvinsi, idProvinsi]"]