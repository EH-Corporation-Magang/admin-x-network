[{"D:\\React Project\\company_profile\\src\\index.js":"1","D:\\React Project\\company_profile\\src\\reportWebVitals.js":"2","D:\\React Project\\company_profile\\src\\App.js":"3","D:\\React Project\\company_profile\\src\\Components\\Navbar.jsx":"4","D:\\React Project\\company_profile\\src\\Screens\\Dashboard.jsx":"5","D:\\React Project\\company_profile\\src\\Components\\Login.jsx":"6","D:\\React Project\\company_profile\\src\\Components\\Register.jsx":"7","D:\\React Project\\company_profile\\src\\Screens\\CareerMenu.jsx":"8","D:\\React Project\\company_profile\\src\\Screens\\ProfileMenu.jsx":"9","D:\\React Project\\company_profile\\src\\Screens\\ContactMenu.jsx":"10","D:\\React Project\\company_profile\\src\\Screens\\AppsMenu.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":6867,"mtime":1609927107335,"results":"15","hashOfConfig":"13"},{"size":4211,"mtime":1609823004779,"results":"16","hashOfConfig":"13"},{"size":12027,"mtime":1609927084618,"results":"17","hashOfConfig":"13"},{"size":6188,"mtime":1609822272851,"results":"18","hashOfConfig":"13"},{"size":7462,"mtime":1609924610124,"results":"19","hashOfConfig":"13"},{"size":22519,"mtime":1609923056244,"results":"20","hashOfConfig":"13"},{"size":8369,"mtime":1609905808588,"results":"21","hashOfConfig":"13"},{"size":6638,"mtime":1609908347675,"results":"22","hashOfConfig":"13"},{"size":25492,"mtime":1609925805809,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1pr9iyl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"D:\\React Project\\company_profile\\src\\index.js",[],["49","50"],"D:\\React Project\\company_profile\\src\\reportWebVitals.js",[],"D:\\React Project\\company_profile\\src\\App.js",[],"D:\\React Project\\company_profile\\src\\Components\\Navbar.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\Dashboard.jsx",["51","52"],"D:\\React Project\\company_profile\\src\\Components\\Login.jsx",[],"D:\\React Project\\company_profile\\src\\Components\\Register.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\CareerMenu.jsx",["53"],"D:\\React Project\\company_profile\\src\\Screens\\ProfileMenu.jsx",[],"D:\\React Project\\company_profile\\src\\Screens\\ContactMenu.jsx",["54"],"import React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst ContactMenu = () => {\r\n    const [tableContact, setTableContact] = useState('')\r\n    // const [idContact, setIdContact] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    useEffect(() => {\r\n        fetchContact().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    const fetchContact = async () => {\r\n        try {\r\n            const fetchApiContact = await fetch(`${URL_API}/contact/count`, {\r\n                method: 'GET'\r\n            })\r\n            const contactdata = await fetchApiContact.json()\r\n            dataTableContact(contactdata.result)\r\n            console.log(contactdata.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    // Setting the data table\r\n    const dataTableContact = contact => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < contact.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"name\"] = contact[index].name\r\n            rowItem[\"email\"] = contact[index].email\r\n            rowItem[\"message_user\"] = contact[index].message\r\n            rowItem[\"created_at\"] = contact[index].created_at.slice(0, 19).replace('T', ' ')\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button onClick={deleteContact} style={{ marginRight: \"10px\", width: \"85%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={contact[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"5px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n            console.log(rowItem)\r\n        }\r\n        setTableContact(rowsData)\r\n    }\r\n\r\n    // Data contact\r\n    const dataContact = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Message',\r\n                    field: 'message_user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Created At',\r\n                    field: 'created_at',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // Delete contact\r\n    const deleteContact = (e) => {\r\n        const id = e.target.id\r\n        console.log(id)\r\n        Swal.fire({\r\n            title: 'Are you sure to delete this data?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Data Siswa has been deleted.',\r\n                    'success'\r\n                ).then(async () => {\r\n                    try {\r\n                        const contactDelete = await fetch(`${URL_API}/contact/delete/${id}`, {\r\n                            method: 'DELETE'\r\n                        })\r\n                        await contactDelete\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                    }\r\n                }).then(function () {\r\n                    fetchContact().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Contact Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Contact Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Siswa */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Contact</h6>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    data={dataContact(tableContact)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default ContactMenu","D:\\React Project\\company_profile\\src\\Screens\\AppsMenu.jsx",["55","56","57"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {\r\n    useState,\r\n    useEffect\r\n} from 'react';\r\nimport MySwal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nconst AppsMenu = () => {\r\n    const [tableApps, setTableApps] = useState('')\r\n    const [idApps, setIdApps] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n    const [icon, setIcon] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [deskripsi, setDeskripsi] = useState('')\r\n    const [iconfiture1, setIconFiture1] = useState('')\r\n    const [fiture1, setFiture1] = useState('')\r\n    const [iconfiture2, setIconFiture2] = useState('')\r\n    const [fiture2, setFiture2] = useState('')\r\n    const [iconfiture3, setIconFiture3] = useState('')\r\n    const [fiture3, setFiture3] = useState('')\r\n    const [iconfiture4, setIconFiture4] = useState('')\r\n    const [fiture4, setFiture4] = useState('')\r\n    const [iconfiture5, setIconFiture5] = useState('')\r\n    const [fiture5, setFiture5] = useState('')\r\n    const [iconfiture6, setIconFiture6] = useState('')\r\n    const [fiture6, setFiture6] = useState('')\r\n    const Swal = withReactContent(MySwal)\r\n    const URL_API = `http://localhost:8000`\r\n\r\n    // Setting the data table\r\n    const dataTableApps = apps => {\r\n        let rowsData = []\r\n\r\n        for (var index = 0; index < apps.length; index++) {\r\n            let rowItem = {}\r\n            rowItem[\"no\"] = index + 1\r\n            rowItem[\"icon\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon} alt=\"icon\" />\r\n            rowItem[\"imageproduct\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].image} alt=\"imageproduct\" />\r\n            rowItem[\"deskripsi\"] = apps[index].description\r\n            rowItem[\"fiture1\"] = apps[index].fiture1\r\n            rowItem[\"iconfiture1\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon_fiture1} alt=\"iconfiture1\" />\r\n            rowItem[\"fiture2\"] = apps[index].fiture2\r\n            rowItem[\"iconfiture2\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon_fiture2} alt=\"iconfiture2\" />\r\n            rowItem[\"fiture3\"] = apps[index].fiture3\r\n            rowItem[\"iconfiture3\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon_fiture3} alt=\"iconfiture3\" />\r\n            rowItem[\"fiture4\"] = apps[index].fiture4\r\n            rowItem[\"iconfiture4\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon_fiture4} alt=\"iconfiture4\" />\r\n            rowItem[\"fiture5\"] = apps[index].fiture5\r\n            rowItem[\"iconfiture5\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon_fiture5} alt=\"iconfiture5\" />\r\n            rowItem[\"fiture6\"] = apps[index].fiture6\r\n            rowItem[\"iconfiture6\"] = <img style={{ width: \"100%\", height: \"20%\" }} src={apps[index].icon_fiture6} alt=\"iconfiture6\" />\r\n            rowItem[\"action\"] =\r\n                <>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} data-toggle=\"modal\" data-target=\"#editModal\" className=\"btn btn-primary\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-table-edit\" style={{ marginRight: \"10px\" }} />Edit</button>\r\n                    <button style={{ marginRight: \"10px\", width: \"45%\", height: \"35px\" }} className=\"btn btn-danger\" type=\"button\" id={apps[index].id} ><i className=\"mdi mdi-delete\" style={{ marginRight: \"10px\" }} />Delete</button>\r\n                </>\r\n            rowsData.push(rowItem)\r\n        }\r\n        setTableApps(rowsData)\r\n    }\r\n\r\n    const fetchApps = async () => {\r\n        try {\r\n            const data = await fetch(`${URL_API}/product`, {\r\n                method: 'GET'\r\n            })\r\n            const datapps = await data.json()\r\n            dataTableApps(datapps.result)\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApps().then(() => {\r\n            setLoading(true)\r\n        })\r\n    }, [])\r\n\r\n    // Data apps\r\n    const dataApps = (data) => {\r\n        return {\r\n            columns: [\r\n                {\r\n                    label: 'No',\r\n                    field: 'no',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Product',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Product',\r\n                    field: 'imageproduct',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description Product',\r\n                    field: 'deskripsi',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 1',\r\n                    field: 'fiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 1',\r\n                    field: 'iconfiture1',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 2',\r\n                    field: 'fiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 2',\r\n                    field: 'iconfiture2',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 3',\r\n                    field: 'fiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 3',\r\n                    field: 'iconfiture3',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 4',\r\n                    field: 'fiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 4',\r\n                    field: 'iconfiture4',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 5',\r\n                    field: 'fiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 5',\r\n                    field: 'iconfiture5',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Fiture 6',\r\n                    field: 'fiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Fiture 6',\r\n                    field: 'iconfiture6',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'action',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: data\r\n        }\r\n    }\r\n\r\n    // handle submit add apps\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let formData = new FormData(e.target)\r\n        try {\r\n            const fetchApi = await fetch(`${URL_API}/product/store`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const create = await fetchApi.json()\r\n            console.log(create)\r\n            if (create.success) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Succes Add Data Product',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                }).then(function () {\r\n                    setIcon('')\r\n                    setImage('')\r\n                    setDeskripsi('')\r\n                    setFiture1('')\r\n                    setIconFiture1('')\r\n                    setFiture2('')\r\n                    setIconFiture2('')\r\n                    setFiture3('')\r\n                    setIconFiture3('')\r\n                    setFiture4('')\r\n                    setIconFiture4('')\r\n                    setFiture5('')\r\n                    setIconFiture5('')\r\n                    setFiture6('')\r\n                    setIconFiture6('')\r\n                    fetchApps().then(() => {\r\n                        setLoading(true)\r\n                    });\r\n                    window.$('#addModal').modal('hide')\r\n                    Swal.fire({\r\n                        title: 'Loading...',\r\n                        timer: 1000,\r\n                        didOpen: () => {\r\n                            Swal.showLoading()\r\n                        },\r\n                    })\r\n                })\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'There is an error!',\r\n                html:\r\n                    '<ul> ' +\r\n                    '<li><p style=\"color: red;\">there are columns that have not been filled</p></li> ' +\r\n                    '</ul > '\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        Swal.close()\r\n        return (\r\n            <>\r\n                {/* header */}\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"> Apps Menu </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\"><a href=\"dashboard\">Dashboard</a></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Apps Menu</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                {/* content */}\r\n                <div className=\"row\" style={{ marginBottom: \"125px\" }}>\r\n                    {/* Area Table Siswa */}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            {/* Card Header - Dropdown */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">Data Aplication Product</h6>\r\n                                <div className=\"dropdown no-arrow\">\r\n                                    <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\" />\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                                        <div className=\"dropdown-header\">Action:</div>\r\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#addModal\">\r\n                                            <i className=\"mdi mdi-plus\" style={{ marginRight: \"10px\", color: \"green\" }} />\r\n                                                Add Modal\r\n                                                </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* Card Body */}\r\n                            <div className=\"card-body\">\r\n                                <MDBDataTable\r\n                                    style={{ color: \"white\" }}\r\n                                    sortable={false}\r\n                                    striped\r\n                                    data={dataApps(tableApps)}\r\n                                    responsive={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <!-- Add Modal --> */}\r\n                <div className=\"modal fade\" id=\"addModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Modal</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" style={{ color: \"white\", marginRight: \"10px\" }}>×</span>\r\n                                </button>\r\n                            </div>\r\n                            <form onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"warning\">\r\n                                        <p>\r\n                                            <b>important notice :</b>\r\n                                            <li>You can input the features below according to your needs</li>\r\n                                            <li>If it is less than 6, please leave the input blank</li>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile1\">Icon</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"icon\"\r\n                                            className=\"form-control-file\"\r\n                                            value={icon}\r\n                                            onChange={e => setIcon(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile2\">Image</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"image\"\r\n                                            className=\"form-control-file\"\r\n                                            value={image}\r\n                                            onChange={e => setImage(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Product Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input job position\"\r\n                                            onChange={e => setDeskripsi(e.target.value)}\r\n                                            value={deskripsi}\r\n                                            name=\"description\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 1 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 1</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 1\"\r\n                                            onChange={e => setFiture1(e.target.value)}\r\n                                            value={fiture1}\r\n                                            name=\"fiture1\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 1</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture1\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture1}\r\n                                            onChange={e => setIconFiture1(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 2 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 2 </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 2\"\r\n                                            onChange={e => setFiture2(e.target.value)}\r\n                                            value={fiture2}\r\n                                            name=\"fiture2\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 2</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture2\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture2}\r\n                                            onChange={e => setIconFiture2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 3 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 3 </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 3\"\r\n                                            onChange={e => setFiture3(e.target.value)}\r\n                                            value={fiture3}\r\n                                            name=\"fiture3\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 3</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture3\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture3}\r\n                                            onChange={e => setIconFiture3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 4 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 4 </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 4\"\r\n                                            onChange={e => setFiture4(e.target.value)}\r\n                                            value={fiture4}\r\n                                            name=\"fiture4\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 4</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture4\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture4}\r\n                                            onChange={e => setIconFiture4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 5 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 5 </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 5\"\r\n                                            onChange={e => setFiture5(e.target.value)}\r\n                                            value={fiture5}\r\n                                            name=\"fiture5\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 5</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture5\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture5}\r\n                                            onChange={e => setIconFiture5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Fiture 6 */}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlInput1\">Feature Product 6 </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"input fiture product 6\"\r\n                                            onChange={e => setFiture6(e.target.value)}\r\n                                            value={fiture6}\r\n                                            name=\"fiture6\"\r\n                                            style={{ color: \"white\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlFile3\">Icon Feature 6</label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"iconfiture6\"\r\n                                            className=\"form-control-file\"\r\n                                            value={iconfiture6}\r\n                                            onChange={e => setIconFiture6(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-success\" >Add Data</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            },\r\n        })\r\n    }\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default AppsMenu",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":29,"column":8,"nodeType":"64","endLine":29,"endColumn":21,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":82,"column":8,"nodeType":"64","endLine":82,"endColumn":10,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":38,"column":8,"nodeType":"64","endLine":38,"endColumn":10,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"63","line":20,"column":8,"nodeType":"64","endLine":20,"endColumn":10,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":12,"column":12,"nodeType":"73","messageId":"74","endLine":12,"endColumn":18},{"ruleId":"71","severity":1,"message":"75","line":12,"column":20,"nodeType":"73","messageId":"74","endLine":12,"endColumn":29},{"ruleId":"62","severity":1,"message":"76","line":81,"column":8,"nodeType":"64","endLine":81,"endColumn":10,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchContact'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has missing dependencies: 'getAmountContact', 'getAmountJob', and 'getAmoutApps'. Either include them or remove the dependency array.",["81"],"React Hook useEffect has a missing dependency: 'fetchJob'. Either include it or remove the dependency array.",["82"],["83"],"no-unused-vars","'idApps' is assigned a value but never used.","Identifier","unusedVar","'setIdApps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchApps'. Either include it or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [currentPage, fetchContact]",{"range":"95","text":"96"},"Update the dependencies array to be: [getAmountContact, getAmountJob, getAmoutApps]",{"range":"97","text":"98"},"Update the dependencies array to be: [fetchJob]",{"range":"99","text":"100"},"Update the dependencies array to be: [fetchContact]",{"range":"101","text":"102"},"Update the dependencies array to be: [fetchApps]",{"range":"103","text":"104"},[983,996],"[currentPage, fetchContact]",[2529,2531],"[getAmountContact, getAmountJob, getAmoutApps]",[1207,1209],"[fetchJob]",[594,596],"[fetchContact]",[4042,4044],"[fetchApps]"]